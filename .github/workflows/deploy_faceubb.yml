name: Despliegue a face-ubb

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Instalar dependencias (OpenVPN, SSH y sshpass)
        run: |
          sudo apt update -qq > /dev/null 2>&1
          sudo apt install -y -qq openvpn openvpn-systemd-resolved openssh-client sshpass

      - name: Crear archivo de configuración OpenVPN
        run: echo "${{ secrets.OPENVPN_CONFIG }}" > /dev/shm/face-ubb.ovpn

      - name: Conexion a la VPN de la UBB
        uses: kota65535/github-openvpn-connect-action@v3.1.0
        timeout-minutes: 2
        continue-on-error: false
        with:
          config_file: /dev/shm/face-ubb.ovpn
          username: ${{ secrets.OPENVPN_USERNAME }}
          password: ${{ secrets.OPENVPN_PASSWORD }}

      - name: Eliminar archivo de configuración OpenVPN
        if: always()
        run: rm -f /dev/shm/face-ubb.ovpn

      - name: Ejecutar despliegue
        env:
          GIT_COMMIT_SHA: ${{ github.sha }}
          # Pasar los secretos con el contenido completo de los .env
          SECRET_ENV_FRONTEND_CONTENT: ${{ secrets.ENV_FRONTEND_CONTENT }}
          SECRET_ENV_BACKEND_CONTENT: ${{ secrets.ENV_BACKEND_CONTENT }}
        run: |
          sshpass -p "${{ secrets.PROD_PASSWORD }}" ssh \
          -q \
          -o StrictHostKeyChecking=no \
          -p ${{ secrets.PROD_PORT }} \
          ${{ secrets.PROD_USER }}@${{ secrets.PROD_HOST }} << 'EOF'
            set -euo pipefail
            
            APP_DIR="/home/vlopez/Proyecto_GPS"
            ENV_FILE_BACKEND="$APP_DIR/backend/src/config/.env"
            ENV_FILE_FRONTEND="$APP_DIR/frontend/.env"
            
            echo ">>> Iniciando despliegue para el commit: $GIT_COMMIT_SHA"

            # 1. Actualizar código
            cd "$APP_DIR"
            echo "Actualizando repositorio al commit: $GIT_COMMIT_SHA..."
            git fetch origin
            git reset --hard origin/main
            
            # 2. Crear/Sobrescribir .env para Backend con contenido del secreto
            # Asegúrate de que la variable de entorno SECRET_ENV_BACKEND_CONTENT esté definida
            if [ -n "$SECRET_ENV_BACKEND_CONTENT" ]; then
              echo "Escribiendo configuración de backend en $ENV_FILE_BACKEND..."
              # Usar printf para manejar correctamente los saltos de línea y caracteres especiales
              printf '%s\n' "$SECRET_ENV_BACKEND_CONTENT" > "$ENV_FILE_BACKEND"
            else
              echo "ADVERTENCIA: El secreto ENV_BACKEND_CONTENT no está definido. Creando .env básico."
              echo "# Generated on $(date)" > "$ENV_FILE_BACKEND"
              echo "NODE_ENV=production" >> "$ENV_FILE_BACKEND"
            fi

            # 3. Crear/Sobrescribir .env para Frontend con contenido del secreto
            if [ -n "$SECRET_ENV_FRONTEND_CONTENT" ]; then
              echo "Escribiendo configuración de frontend en $ENV_FILE_FRONTEND..."
              printf '%s\n' "$SECRET_ENV_FRONTEND_CONTENT" > "$ENV_FILE_FRONTEND"
            else
              echo "ADVERTENCIA: El secreto ENV_FRONTEND_CONTENT no está definido. Creando .env básico."
              echo "# Generated on $(date)" > "$ENV_FILE_FRONTEND"
              echo "VITE_API_URL=https://url-por-defecto.com/api" >> "$ENV_FILE_FRONTEND"
            fi
            
            # 4. Instalar dependencias del backend
            cd "$APP_DIR/backend"
            npm ci --production

            # 5. Reiniciar backend
            pm2 restart freehoot-backend || pm2 start src/index.js --name "freehoot-backend"
            
            # 6. Instalar dependencias y contruir frontend
            cd "$APP_DIR/frontend"
            npm ci --production
            npm run build

            # 7. Reiniciar frontend
            pm2 restart freehoot-frontend || pm2 start npm --name "freehoot-frontend" -- run preview
            
            echo "Despliegue completado en $(date)"
          EOF

      - name: Limpieza
        if: always()
        run: |
          sudo pkill openvpn || true
          rm -f /tmp/ubb-vpn.ovpn
